{"version":3,"sources":["images/sslogo.png","components/NavBar.js","components/AppMode.js","components/ModeTabs.js","components/LoginPage.js","images/sslogo2.png","components/FeedPage.js","components/RoundsMode.js","components/PopUpModal.js","components/NotificationToast.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/RoundsPage.js","components/CoursesPage.js","components/BuddiesPage.js","components/App.js","index.js"],"names":["NavBar","className","id","tabIndex","type","title","icon","src","logo","alt","size","React","Component","AppMode","LOGIN","FEED","ROUNDS","COURSES","BUDDIES","Object","freeze","ModeTabs","this","props","mode","modalOpen","menuOpen","role","onClick","setMode","LoginPage","handleSubmit","e","preventDefault","eValid","email","current","validity","typeMismatch","valueMissing","pValid","password","patternMismatch","setUserId","value","setState","emailValid","passwordValid","renderErrorBox","state","href","ref","emailError","passwordError","createRef","prevProps","focus","onSubmit","noValidate","htmlFor","required","pattern","FeedPage","RoundsMode","ROUNDSTABLE","LOGROUND","EDITROUND","PopUpModal","useState","show","setShow","Modal","onHide","choices","lastFunction","keys","length","console","log","Header","closeButton","Title","text","Body","entries","map","key","Button","NotificationToast","ToastContainer","position","style","backgroundColor","width","zIndex","Toast","onClose","color","textColor","message","RoundsTable","deleteClicked","setDeleteClicked","deleteConfirmed","setDeleteConfirmed","setRoundToDelete","rounds","scope","colSpan","table","r","thisRoundNum","roundNum","push","date","course","Number","strokes","minutes","seconds","initiateEditRound","toString","renderTable","deleteBtnHandler","RoundForm","FloatingButton","action","label","RoundsPage","val","editId","toggleModalOpen","initiateDeleteRound","deleteId","alert","deleteRound","updateRound","createNotification","roundData","saveRound","addRound","i","CoursesPage","BuddiesPage","library","add","faWindowClose","faEdit","faCalendar","faSpinner","faSignInAlt","faBars","faSearch","faSort","faTrash","faEye","App","newMode","toggleMenuOpen","prevState","dialogOpen","userData","accountData","securityQuestion","securityAnswer","identityData","displayName","profilePic","speedgolfProfileData","bio","firstRound","personalBest","homeCourse","clubs","clubComments","roundCount","newRoundData","newRounds","newRoundCount","userId","setUserid","LoginMode","FeedMode","CoursesMode","BuddiesMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8cb321e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sslogo.54514490.png\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport logo from '../images/sslogo.png'\n\n\nclass NavBar extends React.Component {\n    \n    render() {\n       return (\n        <header className=\"navbar\">  \n        <a id=\"sLink\" className=\"skip-link\" tabIndex=\"0\">\n         Skip to content</a>\n         <button id=\"menuBtn\" type=\"button\" className=\"navbar-btn\" \n            title=\"Menu\" aria-controls=\"sideMenu\" \n            aria-label=\"Actions\" aria-haspopup=\"true\" \n            aria-expanded=\"false\">\n            <FontAwesomeIcon icon=\"bars\" className=\"navbar-btn-icon\"/>\n          </button>\n          <img src={logo} className=\"navbar-app-icon\" \n            alt=\"SpeedScore logo\" />\n           <h1 id=\"appName\" className=\"navbar-title\">SpeedScore</h1> \n           <div className=\"navbar-right-items\">\n                <input id=\"searchBox\" className=\"form-control hidden\" \n                aria-label=\"Search Rounds\" size=\"30\"\n                type=\"search\" />\n                <button id=\"searchBtn\" type=\"button\" className=\"navbar-btn hidden\" \n                    aria-label=\"Open Rounds Search\">\n                    <FontAwesomeIcon icon=\"search\" className=\"navbar-btn-icon\"/>\n                </button>\n                <button id=\"profileBtn\" type=\"button\" \n                  className=\"navbar-btn navbar-profile-btn hidden\" \n                  aria-label=\"Account and Profile Settings\">\n                </button> \n            </div>\n      </header>\n    ); \n  }\n}\n\nexport default NavBar;","/* AppMode: The enumerated type for AppMode. */\n\nconst AppMode = {\n    LOGIN: \"LoginMode\",\n    FEED: \"FeedMode\",\n    ROUNDS: \"RoundsMode\",\n    COURSES: \"CoursesMode\",\n    BUDDIES: \"BuddiesMode\"\n};\n\nObject.freeze(AppMode); //This ensures that the object is immutable.\n\nexport default AppMode;\n","import React from 'react';\nimport AppMode from './AppMode';\n\nclass ModeTabs extends React.Component {\n    render() {\n      return(\n        (this.props.mode !== AppMode.LOGIN && !this.props.modalOpen) ?\n        <div id=\"modeTabs\" \n             className={\"modetab-container\" + (this.props.menuOpen ? \" disabled\" : \"\")}  \n             role=\"tablist\" \n             aria-label=\"App Modes\">\n            <button id=\"feedMode\" type=\"button\" \n                className={\"modetab-btn\" + \n                  (this.props.mode === AppMode.FEED ? \" modetab-selected\" : \"\")}\n                role=\"tab\" tabIndex=\"0\" aria-selected=\"true\" \n                aria-controls=\"feedModeTab\"\n                onClick={() => this.props.setMode(AppMode.FEED)}>\n                Feed\n            </button>\n            <button id=\"roundsMode\" type=\"button\" \n                className={\"modetab-btn\" +  \n                    (this.props.mode === AppMode.ROUNDS ? \" modetab-selected\" : \"\") } \n                role=\"tab\" tabIndex=\"-1\" aria-selected=\"false\" \n                aria-controls=\"roundsModeTab\"\n                onClick={() => this.props.setMode(AppMode.ROUNDS)}>\n                Rounds\n            </button>\n            <button id=\"coursesMode\" type=\"button\" \n                className={\"modetab-btn\" +  \n                    (this.props.mode === AppMode.COURSES ? \" modetab-selected\" : \"\") } \n                role=\"tab\" tabIndex=\"-1\" aria-selected=\"false\" \n                aria-controls=\"coursesModeTab\"\n                onClick={() => this.props.setMode(AppMode.COURSES)}>\n                Courses\n            </button>\n            <button id=\"buddiesMode\" type=\"button\" \n                className={\"modetab-btn\" +  \n                    (this.props.mode === AppMode.BUDDIES ? \" modetab-selected\" : \"\") } \n                role=\"tab\" tabIndex=\"-1\" aria-selected=\"false\" \n                aria-controls=\"buddiesModeTab\"\n                onClick={() => this.props.setMode(AppMode.BUDDIES)}>\n                Buddies\n            </button>\n        </div> : null\n        );\n    }\n}\n\nexport default ModeTabs;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport AppMode from './AppMode.js'\n\nclass LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.emailError = React.createRef();\n        this.passwordError = React.createRef();\n        this.email = React.createRef();\n        this.password = React.createRef();\n        this.state = {emailValid: true, \n                      passwordValid: true};\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.state.passwordValid) {\n            this.password.current.value = \"\";\n            this.passwordError.current.focus();\n        }\n        if (!this.state.emailValid) {\n            this.email.current.value = \"\";\n            this.emailError.current.focus();\n        } \n    } \n\n    handleSubmit = (e) => {\n        e.preventDefault();\n         //Is the email field valid\n         const eValid = !this.email.current.validity.typeMismatch && \n                          !this.email.current.validity.valueMissing;\n         //Is the password field valid?\n         const pValid = !this.password.current.validity.patternMismatch && \n                            !this.password.current.validity.valueMissing;\n        if (eValid && pValid) {\n            this.props.setMode(AppMode.FEED);\n            this.props.setUserId(this.email.current.value);\n        } else { //at least one field is invalid--trigger re-render\n            this.setState({emailValid: eValid,\n                passwordValid: pValid});\n        }\n    }\n\n    renderErrorBox = () => {\n        if (this.state.emailValid && this.state.passwordValid) {\n            return null;\n        }\n        if (!this.state.emailValid && this.state.passwordValid) {\n            return (\n                <p id=\"errorBox\" className=\"alert alert-danger centered\">\n                        <a id=\"emailError\" href=\"#email\" \n                            className=\"alert-link\" \n                            ref={this.emailError}>\n                            Enter a valid email address<br/>\n                        </a>\n                </p>\n            );\n        }\n        if (this.state.emailValid && !this.state.passwordValid) {\n                return (\n                    <p id=\"errorBox\" className=\"alert alert-danger centered\">\n                            <a id=\"passwordError\" \n                                href=\"#password\" \n                                className=\"alert-link\" \n                                ref={this.passwordError}>\n                                Enter a valid password\n                            </a>\n                    </p>\n                );\n        }\n        //If here, both email and password are invalid\n        return (<p id=\"errorBox\" className=\"alert alert-danger centered\">\n                        <a id=\"emailError\" href=\"#email\" \n                            className=\"alert-link\" \n                            ref={this.emailError}>\n                            Enter a valid email address<br/>\n                        </a>\n                        <a id=\"passwordError\" \n                            href=\"#password\" \n                            className=\"alert-link\" \n                            ref={this.passwordError}>\n                            Enter a valid password\n                        </a>\n                    </p>);\n    }\n\n    render() {\n        return(\n            <div id=\"loginPage\" className=\"mode-page\">\n                <h1 className=\"mode-page-header\">Log In</h1>\n                {this.renderErrorBox()}\n                <form id=\"loginForm\" className=\"centered\" \n                    onSubmit={this.handleSubmit} noValidate>\n                    <div className=\"mb-3\">\n                    <label htmlFor=\"email\" className=\"form-label\">Email:<br/>\n                        <input id=\"email\" type=\"email\" className=\"form-control-lg centered\"\n                            aria-describedby=\"emailDescr\"\n                            ref={this.email} required/>\n                    </label>\n                    <div id=\"emailDescr\" className=\"form-text\">\n                        Enter a valid email address.\n                    </div>\n                    </div>\n                    <div className=\"mb-3\">\n                    <label htmlFor=\"password\" className=\"form-label\">Password:<br/>\n                        <input id=\"password\" type=\"password\" className=\"form-control-lg centered\"\n                            pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\"\n                            aria-describedby=\"passwordDescr\"\n                            ref={this.password} required />\n                    </label>\n                    <div id=\"passwordDescr\" className=\"form-text\">\n                        Passwords must be at least 8 characters long with at least one number, \n                        one lower case letter, and one upper case letter.\n                    </div>\n                    </div>\n                <p></p>\n                <button type=\"submit\" id=\"loginBtn\" \n                        className=\"btn btn-primary fm-primary-btn\">\n                    <FontAwesomeIcon icon=\"sign-in-alt\"/>\n                        &nbsp;Log In\n                </button>\n                </form>\n                <ul className=\"nav justify-content-center\">\n                <li className=\"nav-item\">\n                    <button id=\"createAccountBtn\" className=\"nav-link btn btn-link\">\n                        Create Account\n                    </button>\n                </li>\n                <li className=\"nav-item\">\n                    <button id=\"resetPasswordBtn\" className=\"nav-link btn btn-link\">Reset Password</button>\n                </li>\n                </ul>\n            </div>  \n        )\n    }\n}\n\nexport default LoginPage;","export default __webpack_public_path__ + \"static/media/sslogo2.c60d6a79.png\";","import React from 'react';\nimport logo from '../images/sslogo2.png'\n\nclass FeedPage extends React.Component {\n\n    render() {\n        return (\n            <div id=\"feedModeTab\" className=\"mode-page\" role=\"tabpanel\"\n                 aria-label=\"Feed Tab\" tabIndex=\"0\">\n                <h1 className=\"mode-page-header\">Activity Feed</h1>\n                <p className=\"mode-page-content\">This page is under construction.</p>\n                <img className=\"mode-page-icon\" \n                     src={logo} alt=\"SpeedScore logo\"></img>\n            </div>\n        );\n    }   \n}\n\nexport default FeedPage;\n","/* RoundsMode: The enumerated type for Rounds modes. */\n\nconst RoundsMode = {\n    ROUNDSTABLE: \"RoundsTable\",\n    LOGROUND: \"LogRound\",\n    EDITROUND: \"EditRound\"\n};\n\nObject.freeze(RoundsMode); //This ensures that the object is immutable.\n\nexport default RoundsMode;\n","import { Modal, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nexport default function PopUpModal(props) {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    setShow(false);\n    // on close execute the function associated with the last entry in the choices object\n    if (props.choices) {\n      const lastFunction =\n        props.choices[\n          Object.keys(props.choices)[Object.keys(props.choices).length - 1]\n        ];\n      try {\n        lastFunction();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.text || \"no text provided\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.choices &&\n            Object.entries(props.choices).map(([key, value]) => (\n              <>\n                <Button\n                  className=\"mb-3\"\n                  onClick={() => {\n                    try {\n                      value();\n                      setShow(false);\n                    } catch (e) {\n                      console.log(e);\n                      setShow(false);\n                    }\n                  }}\n                >\n                  {key}\n                </Button>\n                <br />\n              </>\n            ))}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import { Toast, ToastContainer, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\n/*************************************************************************\n * @function NotificationToast\n * @desc\n * Default exported function that returns renders html for the component.\n * @prop backgroundColor - the background color for the body of the toast.\n *       default value = gray\n * @prop textColor - the color for the text in the body of the toast.\n *       default value = white\n * @prop message - the text in the body of the toast.\n *       default value = \"no message provided\".\n *************************************************************************/\nexport default function NotificationToast(props) {\n  const [show, setShow] = useState(true);\n  const toggleShow = () => setShow(!show);\n\n  return (\n    <div>\n      <ToastContainer position=\"top-start\" style={{backgroundColor: \"white\", width: \"24%\", zIndex: \"201\"}}>\n      <Toast position=\"middle-start\" className=\"notification\"show={show} onClose={toggleShow}>\n        <Toast.Header className=\"notification\">\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n          <strong className=\"me-auto\">New Notification</strong>\n        </Toast.Header>\n        <Toast.Body\n          style={{\n            backgroundColor: props.backgroundColor || \"gray\",\n            color: props.textColor || \"white\",\n          }}\n        >\n          {props.message || \"no message provided\"}\n        </Toast.Body>\n        </Toast>\n        </ToastContainer>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PopUpModal from \"./PopUpModal\";\nimport NotificationToast from './NotificationToast'\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nexport default function RoundsTable(props) {\n  const [deleteClicked, setDeleteClicked] = useState(false);\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n  const [roundsToDelete, setRoundToDelete] = useState(-1);\n\n  const deleteRound = () => {\n    //props.initiateDeleteRound(roundsToDelete);\n    const message = `Round deleted successfully.`;\n    return <NotificationToast message={message}></NotificationToast>\n  };\n\n  const deleteBtnHandler = () => {\n    const confirmDelete = () => {\n      setDeleteConfirmed(true);\n      setDeleteClicked(false);\n    };\n    const cancelDelete = () => {\n      setDeleteClicked(false);\n    };\n    const text = \"Are you sure you want to delete round?\";\n    const choices = {\n      \"Yes, delete round\": confirmDelete,\n      \"No, do not delete round\": cancelDelete,\n    };\n    return <PopUpModal text={text} choices={choices}></PopUpModal>;\n  };\n\n  const renderTable = () => {\n    const table = []\n    for (let r = 0; r < props.rounds.length; ++r) {\n      const thisRoundNum = props.rounds[r].roundNum;\n      table.push(\n        <tr key={thisRoundNum.toString()}>\n          <td>{props.rounds[r].date}</td>\n          <td>{props.rounds[r].course}</td>\n          <td>\n            {Number(props.rounds[r].strokes) +\n              Number(props.rounds[r].minutes) +\n              \":\" +\n              props.rounds[r].seconds +\n              \" (\" +\n              props.rounds[r].strokes +\n              \" in \" +\n              props.rounds[r].minutes +\n              \":\" +\n              props.rounds[r].seconds +\n              \")\"}\n          </td>\n          <td>\n            <button\n              onClick={\n                props.menuOpen\n                  ? null\n                  : () => props.initiateEditRound(thisRoundNum)\n              }\n            >\n              <FontAwesomeIcon icon=\"eye\" />\n              <FontAwesomeIcon icon=\"edit\" />\n            </button>\n          </td>\n          <td>\n            <button\n              onClick={\n                props.menuOpen ? null : () => {\n                  setDeleteConfirmed(false)\n                  setDeleteClicked(true);\n                  setRoundToDelete(thisRoundNum)\n                }\n              }\n            >\n              <FontAwesomeIcon icon=\"trash\" />\n            </button>\n          </td>\n        </tr>\n      );\n    }\n    return table;\n  };\n\n  return (\n    <div\n      id=\"roundsModeTab\"\n      className=\"mode-page\"\n      role=\"tabpanel\"\n      aria-label=\"Rounds Tab\"\n      tabIndex=\"0\"\n    >\n      <h1 className=\"mode-page-header\">Rounds</h1>\n      <table id=\"roundsTable\" className=\"table table-hover caption-top\">\n        <caption id=\"roundsTableCaption\" aria-live=\"polite\">\n          {\"Table displaying \" +\n            props.rounds.length +\n            \" speedgolf round\" +\n            (props.rounds.length !== 1 ? \"s\" : \"\")}\n        </caption>\n        <thead className=\"table-light\">\n          <tr>\n            <th\n              scope=\"col\"\n              role=\"columnheader\"\n              className=\"sortable-header cell-align-middle\"\n              aria-sort=\"none\"\n            >\n              <button\n                className=\"btn bg-transparent table-sort-btn\"\n                aria-label=\"Sort ascending by date\"\n              >\n                <FontAwesomeIcon icon=\"sort\" />\n              </button>\n              Date\n            </th>\n            <th\n              scope=\"col\"\n              role=\"columnheader\"\n              className=\"sortable-header cell-align-middle\"\n              aria-sort=\"none\"\n            >\n              <button\n                className=\"btn bg-transparent table-sort-btn\"\n                aria-label=\"Sort ascending by course\"\n              >\n                <FontAwesomeIcon icon=\"sort\" />\n              </button>\n              Course\n            </th>\n            <th\n              scope=\"col\"\n              role=\"columnheader\"\n              className=\"sortable-header cell-align-middle\"\n              aria-sort=\"none\"\n            >\n              <button\n                className=\"btn bg-transparent table-sort-btn\"\n                aria-label=\"Sort ascending by score\"\n              >\n                <FontAwesomeIcon icon=\"sort\" />\n              </button>\n              Score\n            </th>\n            <th scope=\"col\" className=\"cell-align-middle\">\n              View/Edit...\n            </th>\n            <th scope=\"col\" className=\"cell-align-middle\">\n              Delete\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.rounds === null || props.rounds.length === 0 ? (\n            <tr>\n              <td colSpan=\"5\" scope=\"rowgroup\">\n                <i>No rounds logged</i>\n              </td>\n            </tr>\n          ) : (\n            renderTable()\n          )}\n        </tbody>\n      </table>\n      <Button\n        onClick={() => {\n          setDeleteConfirmed(false)\n          setDeleteClicked(true);\n        }}\n      >\n        add and delete functionality not implemented so click me\n      </Button>\n      {deleteClicked && deleteBtnHandler()}\n      {deleteConfirmed && deleteRound()}\n    </div>\n  );\n}","import React from 'react';\n\nclass RoundForm extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n        <div className=\"mode-page action-dialog\">\n            <h1 className=\"mode-page-header\">Round Form</h1>\n        </div>\n     );\n    }\n}\n\nexport default RoundForm;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass FloatingButton extends React.Component {\n    \n    render() {\n       return (\n        <button id=\"roundsModeActionBtn\"  type=\"button\" \n                className=\"float-btn\" onClick={this.props.action}>\n          <FontAwesomeIcon icon={this.props.icon}/>\n            &nbsp;{this.props.label}\n        </button>\n    ); \n  }\n}\n\nexport default FloatingButton;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport RoundsMode  from './RoundsMode.js';\nimport RoundsTable from './RoundsTable.js';\nimport RoundForm from './RoundForm.js';\nimport FloatingButton from './FloatingButton.js'\n\nclass RoundsPage extends React.Component {\n    constructor(props) {\n            super(props);\n            this.state = {mode: RoundsMode.ROUNDSTABLE,\n                          deleteId: -1,\n                          editId: -1};        \n    }\n\n    initiateEditRound = (val) => {\n        this.setState({editId: val,\n                       mode: RoundsMode.EDITROUND}, \n                       this.props.toggleModalOpen);\n    }\n    \n    initiateDeleteRound = (val) => {\n        this.setState({deleteId: val},\n        () => alert(\"Confirm delete goes here!\"));\n    }\n    render() {\n        switch (this.state.mode) {\n        case RoundsMode.ROUNDSTABLE: \n            return (\n                <>\n                    <RoundsTable rounds={this.props.rounds}\n                                initiateDeleteRound={this.initiateDeleteRound}\n                                deleteRound={this.props.deleteRound} \n                                deleteId={this.state.deleteId}\n                                initiateEditRound= {this.initiateEditRound}\n                                updateRound= {this.props.updateRound}\n                                setMode={this.setMode} \n                                toggleModalOpen={this.props.toggleModalOpen}\n                                menuOpen={this.props.menuOpen} \n                                createNotification={this.props.createNotification}\n                                /> \n                    <FloatingButton\n                        icon=\"calendar\"\n                        label={\"Log Round\"}\n                        menuOpen={this.props.menuOpen}\n                        action={()=>this.setState({mode: RoundsMode.LOGROUND},\n                                    this.props.toggleModalOpen)} />\n            </>\n            );\n        case RoundsMode.LOGROUND:\n            return (\n            <RoundForm mode={this.state.mode}\n                    roundData={null}\n                    saveRound={this.props.addRound}\n                    setMode={this.setMode}\n                    toggleModalOpen={this.props.toggleModalOpen} />\n            );\n        case RoundsMode.EDITROUND:\n            let i;\n            for (i = 0; i < this.props.rounds.length; ++i) {\n                if (this.props.rounds[i].roundNum === this.state.editId) {\n                    break;\n                }\n            }\n            return (\n            <RoundForm mode={this.state.mode}\n                roundData={this.props.rounds[i]}\n                saveRound={this.props.updateRound}\n                setMode={this.setMode}\n                toggleModalOpen={this.props.toggleModalOpen} />\n            );\n        }\n    }  \n\n}\n\nexport default RoundsPage;","import React from 'react';\nimport logo from '../images/sslogo2.png'\n\nclass CoursesPage extends React.Component {\n\n    render() {\n        return (\n            <div id=\"coursesModeTab\" className=\"mode-page\" role=\"tabpanel\"\n                 aria-label=\"Courses Tab\" tabIndex=\"0\">\n                <h1 className=\"mode-page-header\">Courses</h1>\n                <p className=\"mode-page-content\">This page is under construction.</p>\n                <img className=\"mode-page-icon\" \n                     src={logo} alt=\"SpeedScore logo\"></img>\n            </div>\n        );\n    }   \n}\n\nexport default CoursesPage;","import React from 'react';\nimport logo from '../images/sslogo2.png'\n\nclass BuddiesPage extends React.Component {\n\n    render() {\n        return (\n            <div id=\"buddiesModeTab\" className=\"mode-page\" role=\"tabpanel\"\n                 aria-label=\"Buddies Tab\" tabIndex=\"0\">\n                <h1 className=\"mode-page-header\">Buddies</h1>\n                <p className=\"mode-page-content\">This page is under construction.</p>\n                <img className=\"mode-page-icon\" \n                     src={logo} alt=\"SpeedScore logo\"></img>\n            </div>\n        );\n    }   \n}\n\nexport default BuddiesPage;","import React from 'react';\nimport { library } from \"@fortawesome/fontawesome-svg-core\"; \nimport { faWindowClose, faEdit, faCalendar, \n        faSpinner, faSignInAlt, faBars, faSearch,\n        faSort, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\nimport NavBar from './NavBar.js';\nimport ModeTabs from './ModeTabs.js';\nimport LoginPage from './LoginPage.js';\nimport FeedPage from './FeedPage.js';\nimport RoundsPage from './RoundsPage.js';\nimport CoursesPage from './CoursesPage.js';\nimport BuddiesPage from './BuddiesPage.js';\nimport AppMode from './AppMode.js';\nimport NotificationToast from './NotificationToast.js'\n\nlibrary.add(faWindowClose,faEdit, faCalendar, \n            faSpinner, faSignInAlt, faBars, faSearch,\n            faSort, faTrash, faEye);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  modalOpen: false,\n                  userData: {}};\n  }\n\n  setMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  toggleModalOpen = () => {\n    this.setState(prevState => ({dialogOpen: !prevState.dialogOpen}));\n  }\n\n  setUserId = (id) => {\n    this.setState(\n      {userData: {\n          accountData: {\n            email: id,\n            password: \"\",\n            securityQuestion: \"\",\n            securityAnswer: \"\"\n          },\n          identityData: {\n            displayName: id,\n            profilePic: \"images/DefaultProfilePic.jpg\"\n          },\n          speedgolfProfileData: {\n            bio: \"\",\n            firstRound: \"\",\n            personalBest: {},\n            homeCourse: \"\",\n            clubs: {},\n            clubComments: \"\"\n        },\n        rounds: [],\n        roundCount: 0\n        }\n     }\n    );\n  }\n\n  addRound = (newRoundData) => {\n    const newRounds = [...this.state.userData.rounds];\n    const newRoundCount = this.state.userData.roundCount + 1;\n    newRoundData.roundNum = newRoundCount;\n    newRounds.push(newRoundData);\n    this.setState({userData: {accountData: this.state.userData.accountData,\n                              identityData: this.state.userData.identityData,\n                              speedgolfProfileData: this.state.userData.speedgolfProfileData,\n                              rounds: newRounds, \n                              roundCount: newRoundCount}\n                  });\n  }\n\n  updateRound = (id, newRoundData) => {\n    const newRounds = [...this.state.userData.rounds];\n    let r;\n    for (r = 0; r < newRounds.length; ++r) {\n        if (newRounds[r].roundNum === id) {\n            break;\n        }\n    }\n    newRounds[r] = newRoundData;\n    this.setState({userData: \n        {accountData: this.state.userData.accountData,\n        identityData: this.state.userData.identityData,\n        speedgolfProfileData: this.state.userData.speedgolfProfileData,\n        rounds: newRounds, \n        roundCount: this.state.userData.roundCount\n      }\n    });\n  }\n\n  deleteRound = (id) => {\n    const newRounds = [...this.state.userData.rounds];\n    let r;\n    for (r = 0; r < newRounds.length; ++r) {\n        if (newRounds[r].roundNum === this.state.deleteId) {\n            break;\n        }\n    }\n    delete newRounds[r];\n    this.setState({userData: {accountData: this.state.userData.accountData,\n      identityData: this.state.userData.identityData,\n      speedgolfProfileData: this.state.userData.speedgolfProfileData,\n      rounds: newRounds, \n      roundCount: this.state.userData.roundCount}\n    });\n  }\n\n  createNotification = (textColor, backgroundColor, message) => {\n    return (\n      <NotificationToast \n        textColor={textColor}\n        backgroundColor={backgroundColor}\n        message={message}\n        />\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar mode={this.state.mode}\n                menuOpen={this.state.menuOpen}\n                toggleMenuOpen={this.state.toggleMenuOpen}\n                modalOpen={this.state.modalOpen}\n                toggleModalOpen={this.toggleModalOpen}\n                userId={this.state.userId}\n                setUserId={this.setUserid} /> \n        <ModeTabs mode={this.state.mode}\n                  setMode={this.setMode} \n                  menuOpen={this.state.menuOpen}\n                  modalOpen={this.state.modalOpen}/> \n        {\n          {LoginMode:\n            <LoginPage setMode={this.setMode}\n                       modalOpen={this.state.modalOpen}\n                       toggleModalOpen={this.toggleModalOpen} \n                       setUserId={this.setUserId}/>, \n          FeedMode:\n            <FeedPage modalOpen={this.state.modalOpen}\n                      toggleModalOpen={this.toggleModalOpen} \n                      menuOpen={this.state.menuOpen}\n                      userId={this.state.userId}/>,\n          RoundsMode:\n            <RoundsPage rounds={this.state.userData.rounds}\n                        modalOpen={this.state.modalOpen}\n                        toggleModalOpen={this.toggleModalOpen} \n                        menuOpen={this.state.menuOpen}\n                        userId={this.state.userId}\n                        createNotification={this.createNotification}\n                        updateRound={this.updateRound}/>,\n          CoursesMode:\n            <CoursesPage modalOpen={this.state.modalOpen}\n                        toggleModalOpen={this.toggleModalOpen} \n                        menuOpen={this.state.menuOpen}\n                        userId={this.state.userId}/>,\n          BuddiesMode:\n            <BuddiesPage modalOpen={this.state.modalOpen}\n                        toggleModalOpen={this.toggleModalOpen} \n                        menuOpen={this.state.menuOpen}\n                        userId={this.state.userId}/>\n        }[this.state.mode]\n        }\n      </>\n    ); \n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css'\nimport App from './components/App.js';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}